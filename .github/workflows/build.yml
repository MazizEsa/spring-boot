name: Build
on: push
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu22-8-32'
          - 'windows-latest'
        java:
          - distribution: 'liberica'
            version: '21'
    name: 'Java ${{ matrix.java.version }} | ${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    if: ${{ github.repository == 'spring-projects/spring-boot' }}
    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.java.distribution }}
          java-version: |
            ${{ matrix.java.version }}
            17
      - name: Configure git to avoid issues with line endings and long paths on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          git config --global core.autocrlf true
          git config --global core.longPaths true
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5
      - name: Build
        env:
          CI: 'true'
          GRADLE_ENTERPRISE_URL: 'https://ge.spring.io'
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY }}
          GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USER }}
          GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
        run: ./gradlew -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false --no-daemon build publishAllPublicationsToDeploymentRepository -PdeploymentRepository=$(pwd)/distribution-repository -PtoolchainVersion=${{ matrix.java.version }} -Porg.gradle.java.installations.auto-detect=false -Porg.gradle.java.installations.auto-download=false -Porg.gradle.java.installations.paths=$JAVA_HOME_${{ matrix.java.version }}_X64
      - name: Print JVM thread dumps when cancelled
        uses: ./.github/actions/print-jvm-thread-dumps
        if: cancelled()
